name: NodeJS Release
on:
  push:
    branches:
      - 'main'
jobs:
  checkversion:
    runs-on: ubuntu-latest
    outputs:
      foundServerVersion: ${{ steps.init.outputs.foundServerVersion }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: get-client-version
        # https://gist.github.com/DarrenN/8c6a5b969481725a4413?permalink_comment_id=3863317#gistcomment-3863317
        run: |
          echo "SERVER_VERSION=$(npm pkg get version | sed 's/"//g')" >> $GITHUB_ENV
      - uses: mukunku/tag-exists-action@v1.6.0
        id: checkTag
        with:
          tag: ${{ env.SERVER_VERSION }}
      - run: echo ${{ steps.checkTag.outputs.exists }}
      - name: Environment variables to output
        id: init
        run: |
          echo "foundServerVersion=${{ steps.checkTag.outputs.exists }}" >> $GITHUB_OUTPUT

  release:
    needs: checkversion
    runs-on: ubuntu-latest
    if: needs.checkversion.outputs.foundServerVersion == 'false'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      # https://stackoverflow.com/questions/57968497/how-do-i-set-an-env-var-with-a-bash-expression-in-github-actions
      - name: get-server-version
        # https://gist.github.com/DarrenN/8c6a5b969481725a4413?permalink_comment_id=3863317#gistcomment-3863317
        run: |
          echo "SERVER_VERSION=$(npm pkg get version | sed 's/"//g')" >> $GITHUB_ENV

      - name: set-tag
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            RELEASE_TAG="${{ env.SERVER_VERSION }}"
          else
            RELEASE_TAG="${{ env.SERVER_VERSION }}-${{ github.run_number }}"
          fi
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV

      - name: print-tag
        run: |
          echo ${{ env.RELEASE_TAG }}

      # Build dist folder
      - run: yarn set version berry
      - run: yarn install --immutable
      - run: yarn build

      # Publish to NPM
      - uses: JS-DevTools/npm-publish@v3
        with:
          dry-run: false
          token: ${{ secrets.NPM_TOKEN }}
          access: public
          package: package.json

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: ${{ contains(env.SERVER_VERSION, 'rc') || contains(env.SERVER_VERSION, 'unstable') }}
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_TAG }} Thumbnail Thumper ðŸ”¨
          body: "Release notes not added" # ${{ steps.build_changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: action-zip
        uses: montudor/action-zip@v1.0.0
        with:
          args: | 
            zip -qq -r dist-server-${{ env.RELEASE_TAG }}.zip dist .env.template package.json .yarn yarn.lock .yarnrc.yml migrate-mongo-config.js tsconfig.json README.md LICENSE CODE_OF_CONDUCT.md CONTRIBUTING.md SECURITY.md .swcrc .dockerignore            

      - name: Upload server bundle zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist-server-${{ env.RELEASE_TAG }}.zip
          asset_name: dist-server-${{ env.RELEASE_TAG }}.zip
          asset_content_type: application/zip

